# This is a basic workflow to help you get started with Actions

name: main CI

# Controls when the workflow will run
on:
  push:
    tags:
      - "*.*.*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v6
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build VATSIM VMR file
        run: |
          python scripts/vmr_rules_v3.py -f ./fsltl-traffic-base/SimObjects/Airplanes -o ./fsltl-traffic-base

      - name: Run FBW Simulations Fragmenter
        run: |
          npm install https://github.com/FSLiveTrafficLiveries/fragmenter
          node scripts/fragment.js

      - name: Build releases.yaml file
        run: |
          echo "releases:" >> ./fsltl-traffic-base-build/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./fsltl-traffic-base-build/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./fsltl-traffic-base-build/releases.yaml

      - name: Upload Files to Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.FSLTL_PAT_UPLOAD }}
        with:
          file: "./fsltl-traffic-base-build/*"
          tags: true
          prerelease: true
          update_latest_release: false
          overwrite: false
